#lang racket

;;;; Copyright Johan Sjölén 2020
(require redex
         "ct-wasm.rkt"
         (except-in "rel-wasm.rkt"
          conf*->conf...
          conf...->conf*)
         "simple-wasm.rkt"
         "smt-discharge.rkt")
(provide (all-defined-out))

(define (do-it)
  (sat-fixpoint (list salsa20-conf 'ϵ)))

(define salsafun
  (term (seq              (get-global 19)
             (get-global 18)
             (get-global 17)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 19)
             (get-global 18)
             (get-global 17)
             (get-global 16)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 18)
             (get-global 17)
             (get-global 16)
             (get-global 19)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 17)
             (get-global 16)
             (get-global 19)
             (get-global 18)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 16)
             (get-global 14)
             (get-global 13)
             (get-global 12)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 14)
             (get-global 13)
             (get-global 12)
             (get-global 15)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 13)
             (get-global 12)
             (get-global 15)
             (get-global 14)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 12)
             (get-global 15)
             (get-global 14)
             (get-global 13)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 15)
             (get-global 9)
             (get-global 8)
             (get-global 11)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 9)
             (get-global 8)
             (get-global 11)
             (get-global 10)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 8)
             (get-global 11)
             (get-global 10)
             (get-global 9)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 11)
             (get-global 10)
             (get-global 9)
             (get-global 8)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 10)
             (get-global 4)
             (get-global 7)
             (get-global 6)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 4)
             (get-global 7)
             (get-global 6)
             (get-global 5)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 7)
             (get-global 6)
             (get-global 5)
             (get-global 4)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 6)
             (get-global 5)
             (get-global 4)
             (get-global 7)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 5)
             (get-global 19)
             (get-global 15)
             (get-global 11)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 19)
             (get-global 15)
             (get-global 11)
             (get-global 7)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 15)
             (get-global 11)
             (get-global 7)
             (get-global 19)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 11)
             (get-global 7)
             (get-global 19)
             (get-global 15)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 7)
             (get-global 14)
             (get-global 10)
             (get-global 6)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 14)
             (get-global 10)
             (get-global 6)
             (get-global 18)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 10)
             (get-global 6)
             (get-global 18)
             (get-global 14)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 6)
             (get-global 18)
             (get-global 14)
             (get-global 10)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 18)
             (get-global 9)
             (get-global 5)
             (get-global 17)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 9)
             (get-global 5)
             (get-global 17)
             (get-global 13)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 5)
             (get-global 17)
             (get-global 13)
             (get-global 9)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 17)
             (get-global 13)
             (get-global 9)
             (get-global 5)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 13)
             (get-global 4)
             (get-global 16)
             (get-global 12)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 4)
             (get-global 16)
             (get-global 12)
             (get-global 8)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 16)
             (get-global 12)
             (get-global 8)
             (get-global 4)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 12)
             (get-global 8)
             (get-global 4)
             (get-global 16)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 8)
             ; -------
             (const i32 2)
             (get-global 36)
             (add i32)
             (set-global 36))))

(define salsa20
  (term (seq
         (get-global 3)
         (load i32 0 12)
         (tee-global 35)
         (set-global 19)
         (get-global 2)
         (load i32 0 28)
         (tee-global 34)
         (set-global 18)
         (get-global 2)
         (load i32 0 24)
         (tee-global 33)
         (set-global 17)
         (get-global 2)
         (load i32 0 20)
         (tee-global 32)
         (set-global 16)
         (get-global 2)
         (load i32 0 16)
         (tee-global 31)
         (set-global 15)
         (get-global 3)
         (load i32 0 8)
         (tee-global 30)
         (set-global 14)
         (get-global 1)
         (load i32 0 12)
         (tee-global 29)
         (set-global 13)
         (get-global 1)
         (load i32 0 8)
         (tee-global 28)
         (set-global 12)
         (get-global 1)
         (load i32 0 4)
         (tee-global 27)
         (set-global 11)
         (get-global 1)
         (load i32 0 0)
         (tee-global 26)
         (set-global 10)
         (get-global 3)
         (load i32 0 4)
         (tee-global 25)
         (set-global 9)
         (get-global 2)
         (load i32 0 12)
         (tee-global 24)
         (set-global 8)
         (get-global 2)
         (load i32 0 8)
         (tee-global 23)
         (set-global 7)
         (get-global 2)
         (load i32 0 4)
         (tee-global 22)
         (set-global 6)
         (get-global 2)
         (load i32 0 0)
         (tee-global 21)
         (set-global 5)
         (get-global 3)
         (load i32 0 0)
         (tee-global 20)
         (set-global 4)
         (block
          (-> () ())
          (seq
           (loop
            (-> () ())
            (seq
             (const i32 20)
             (get-global 36)
             (sub i32)
             (if (-> () ()) ϵ else (seq (br 2)))
             ; ------
             (get-global 19)
             (get-global 18)
             (get-global 17)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 19)
             (get-global 18)
             (get-global 17)
             (get-global 16)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 18)
             (get-global 17)
             (get-global 16)
             (get-global 19)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 17)
             (get-global 16)
             (get-global 19)
             (get-global 18)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 16)
             (get-global 14)
             (get-global 13)
             (get-global 12)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 14)
             (get-global 13)
             (get-global 12)
             (get-global 15)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 13)
             (get-global 12)
             (get-global 15)
             (get-global 14)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 12)
             (get-global 15)
             (get-global 14)
             (get-global 13)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 15)
             (get-global 9)
             (get-global 8)
             (get-global 11)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 9)
             (get-global 8)
             (get-global 11)
             (get-global 10)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 8)
             (get-global 11)
             (get-global 10)
             (get-global 9)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 11)
             (get-global 10)
             (get-global 9)
             (get-global 8)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 10)
             (get-global 4)
             (get-global 7)
             (get-global 6)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 4)
             (get-global 7)
             (get-global 6)
             (get-global 5)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 7)
             (get-global 6)
             (get-global 5)
             (get-global 4)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 6)
             (get-global 5)
             (get-global 4)
             (get-global 7)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 5)
             (get-global 19)
             (get-global 15)
             (get-global 11)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 19)
             (get-global 15)
             (get-global 11)
             (get-global 7)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 15)
             (get-global 11)
             (get-global 7)
             (get-global 19)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 11)
             (get-global 7)
             (get-global 19)
             (get-global 15)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 7)
             (get-global 14)
             (get-global 10)
             (get-global 6)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 14)
             (get-global 10)
             (get-global 6)
             (get-global 18)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 10)
             (get-global 6)
             (get-global 18)
             (get-global 14)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 6)
             (get-global 18)
             (get-global 14)
             (get-global 10)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 18)
             (get-global 9)
             (get-global 5)
             (get-global 17)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 9)
             (get-global 5)
             (get-global 17)
             (get-global 13)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 5)
             (get-global 17)
             (get-global 13)
             (get-global 9)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 17)
             (get-global 13)
             (get-global 9)
             (get-global 5)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 13)
             (get-global 4)
             (get-global 16)
             (get-global 12)
             (add i32)
             (const i32 18)
             (rotl i32)
             (xor i32)
             (set-global 4)
             (get-global 16)
             (get-global 12)
             (get-global 8)
             (add i32)
             (const i32 13)
             (rotl i32)
             (xor i32)
             (set-global 16)
             (get-global 12)
             (get-global 8)
             (get-global 4)
             (add i32)
             (const i32 9)
             (rotl i32)
             (xor i32)
             (set-global 12)
             (get-global 8)
             (get-global 4)
             (get-global 16)
             (add i32)
             (const i32 7)
             (rotl i32)
             (xor i32)
             (set-global 8)
             ; -------
             (const i32 2)
             (get-global 36)
             (add i32)
             (set-global 36)
             (br 0)))))
         (get-global 0)
         (get-global 19)
         (get-global 35)
         (add i32)
         (store i32 0 60)
         (get-global 0)
         (get-global 18)
         (get-global 34)
         (add i32)
         (store i32 0 56)
         (get-global 0)
         (get-global 17)
         (get-global 33)
         (add i32)
         (store i32 0 52)
         (get-global 0)
         (get-global 16)
         (get-global 32)
         (add i32)
         (store i32 0 48)
         (get-global 0)
         (get-global 15)
         (get-global 31)
         (add i32)
         (store i32 0 44)
         (get-global 0)
         (get-global 14)
         (get-global 30)
         (add i32)
         (store i32 0 40)
         (get-global 0)
         (get-global 13)
         (get-global 29)
         (add i32)
         (store i32 0 36)
         (get-global 0)
         (get-global 12)
         (get-global 28)
         (add i32)
         (store i32 0 32)
         (get-global 0)
         (get-global 11)
         (get-global 27)
         (add i32)
         (store i32 0 28)
         (get-global 0)
         (get-global 10)
         (get-global 26)
         (add i32)
         (store i32 0 24)
         (get-global 0)
         (get-global 9)
         (get-global 25)
         (add i32)
         (store i32 0 20)
         (get-global 0)
         (get-global 8)
         (get-global 24)
         (add i32)
         (store i32 0 16)
         (get-global 0)
         (get-global 7)
         (get-global 23)
         (add i32)
         (store i32 0 12)
         (get-global 0)
         (get-global 6)
         (get-global 22)
         (add i32)
         (store i32 0 8)
         (get-global 0)
         (get-global 5)
         (get-global 21)
         (add i32)
         (store i32 0 4)
         (get-global 0)
         (get-global 4)
         (get-global 20)
         (add i32)
         (store i32 0 0))))

#|
;; output $o: 64 bytes
;; input pointer $p: 16 bytes
;; input pointer $k: 32 bytes
;; input pointer $c: 16 bytes
(func $core_salsa20 (export "core_salsa20") untrusted
	(param $o i32)
	(param $p i32)
	(param $k i32)
	(param $c i32)
|#

(define salsa20-conf
  (term
   ((pair
     (ϵ (glob
         (const i32 sym-var-$o-l)
         (const i32 sym-var-$p-l)
         (const i32 sym-var-$k-l)
         (const i32 sym-var-$c-l) ; 3
         ; 36 - 3 = 33
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0)
         )
        (func))
     (ϵ (glob
         (const i32 sym-var-$o-r)
         (const i32 sym-var-$p-r)
         (const i32 sym-var-$k-r)
         (const i32 sym-var-$c-r)
         ; 36 - 3 = 33
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0) (const i32 0)
         (const i32 0) (const i32 0) (const i32 0)
         )
        (func)))
    ()
    ((pair
      ,salsa20
      ,salsa20)
     ϵ)
    ϵ)))
(define salsa20-conf* (list salsa20-conf 'ϵ))

(define salsa202
  (term (seq
         (block
          (-> () ())
          (seq
           (loop
            (-> () ())
            (seq
             (const i32 2)
             (get-global 0)
             (add i32)
             (set-global 0)
             (const i32 4)
             (get-global 0)
             (sub i32)
             (if (-> () ()) ϵ else (seq (br 2)))
             ; ----------------------------------

             ; ----------------------------------
             (br 0))
            ))))))
(define salsa203
  (term (seq
         (block
          (-> () (i32))
          (seq
             (const i32 2)
             (get-global 0)
             (add i32)
             (set-global 0)
             (const i32 2)
             (get-global 0)
             (add i32)
             (set-global 0)
             
             (const i32 4)
             (get-global 0)
             (sub i32)
             (if (-> () (i32)) (seq (const i32 1)) else (seq  (const i32 2)))
             ; ----------------------------------
             )))))

(define salsa203-conf
  (term
   ((pair
     (ϵ (glob
         (const i32 0))
        (func))
     (ϵ (glob
         (const i32 0))
        (func)))
    ()
    ((pair
      ,salsa203
      ,salsa203)
     ϵ)
    ϵ)))

(define salsa202-conf
  (term
   ((pair
     (ϵ (glob
         (const i32 0))
        (func))
     (ϵ (glob
         (const i32 0))
        (func)))
    ()
    ((pair
      ,salsa202
      ,salsa202)
     ϵ)
    ϵ)))
(define salsa202-conf1
  (term
   ((ϵ (glob
        (const i32 0)
         )
       (func))
    ()
    ,salsa202
    ϵ)))

(define (apply-n conf* n)
  (with-output-to-file
      "output"
    (lambda ()
      (let rec ([conf* conf*]
                [n n])
        (displayln conf*)
        (display "============================= ")
        (if (= n 0)
            '()
            (let* ([x (first (apply-reduction-relation/tag-with-names rel-> conf*))]
                   [c* (second x)]
                   [r (first x)])
              (displayln r)
              (rec c*
                  (- n 1))))))))

(define init
  (term ((((ϵ ϵ) ,salsa20-conf) ϵ) ϵ)))

; 318

'(((pair (ϵ (glob (const i32 sym-var-4)) (func)) (ϵ (glob (const i32 sym-var-5)) (func))) () ((pair ((label 0 (ϵ) ((loop (-> () ()) ((const i32 2) ((get-global 0) ((add i32) ((set-global 0) ((const i32 4) ((get-global 0) ((sub i32) ((if (-> () ()) ϵ else ((br 2) ϵ)) ((br 0) ϵ)))))))))) ϵ)) ϵ) ϵ) ϵ) ((= sym-var-7 0) ((> sym-var-6 0) ((= sym-var-7 (sub 4 sym-var-5)) ((= sym-var-6 (sub 4 sym-var-4)) ((= sym-var-5 (add 2 sym-var-1)) ((= sym-var-4 (add 2 sym-var-)) ((> sym-var-3 0) ((> sym-var-2 0) ((= sym-var-3 (sub 4 sym-var-1)) ((= sym-var-2 (sub 4 sym-var-)) ((= sym-var-1 (add 2 0)) ((= sym-var- (add 2 0)) ϵ))))))))))))) ϵ)

